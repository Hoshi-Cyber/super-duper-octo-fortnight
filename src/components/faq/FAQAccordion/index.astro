---
/**
 * FAQAccordion â€” mobile-first, token-driven, a11y-first
 * Props:
 *  items: Array<{ q: string; a: string }>
 *  title?: string
 *  sub?: string
 *  class?: string
 *  schema?: boolean
 *  showHead?: boolean   // render internal header; default true
 */
export interface QA { q: string; a: string }
export interface Props {
  items: QA[]
  title?: string
  sub?: string
  class?: string
  schema?: boolean
  showHead?: boolean
}

const {
  items = [],
  title = "Frequently asked questions",
  sub,
  class: className = "",
  schema = true,
  showHead = true
} = Astro.props as Props

// Unique id per instance for safe event scoping
const listId = `faq-${Math.random().toString(36).slice(2, 8)}`

const faqSchema = schema
  ? {
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "mainEntity": items.map((it) => ({
        "@type": "Question",
        "name": it.q,
        "acceptedAnswer": { "@type": "Answer", "text": it.a }
      }))
    }
  : null
---
<section class={`section ${className}`.trim()} data-section="faq" aria-labelledby={showHead ? `${listId}-title` : undefined}>
  <div class="container">
    {showHead && (
      <header class="faq__head">
        <h2 id={`${listId}-title`} class="faq__title h2">{title}</h2>
        {sub && <p class="faq__sub text-muted">{sub}</p>}
      </header>
    )}

    <div class="faq__list" role="list" id={listId}>
      {items.map((it, idx) => (
        <details class="faq__item" role="listitem">
          <summary class="faq__summary" aria-controls={`${listId}-a-${idx}`} aria-expanded="false">
            <span class="faq__q">{it.q}</span>
            <svg class="faq__chev" viewBox="0 0 24 24" width="20" height="20" aria-hidden="true">
              <path d="M6 9l6 6 6-6" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" />
            </svg>
          </summary>
          <div id={`${listId}-a-${idx}`} class="faq__a">
            <p set:html={it.a}></p>
          </div>
        </details>
      ))}
    </div>
  </div>

  {faqSchema && (
    <script type="application/ld+json">
      {JSON.stringify(faqSchema)}
    </script>
  )}

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const root = document.getElementById(/* astro:sanitize */ {listId});
      if (!root) return;

      const items = Array.from(root.querySelectorAll('details.faq__item'));

      const syncExpanded = () => {
        for (const d of items) {
          const s = d.querySelector('summary');
          if (s) s.setAttribute('aria-expanded', String(d.open));
        }
      };

      const closeOthers = (current) => {
        for (const d of items) {
          if (d !== current && d.open) d.removeAttribute('open');
        }
      };

      // Enforce single-open with per-item listeners
      for (const d of items) {
        d.addEventListener('toggle', () => {
          if (d.open) closeOthers(d);
          syncExpanded();
        });
      }

      // Initial state sync (supports server-rendered [open])
      syncExpanded();
    });
  </script>
</section>

<style is:global>
  @import "./FAQAccordion.css";
</style>
