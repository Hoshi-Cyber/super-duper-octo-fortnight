---
import "./ComparisonMatrix.css";

export interface FeatureRow {
  label: string;
  values: Array<boolean | string>; // one per plan
}

const {
  plans = [],
  features = [],
  caption = "Compare plans",
  eyebrow = "Feature comparison",
  compact = false,
  wide = false,
  showHead = true, // allow page to own the section heading
} = Astro.props as {
  plans?: string[];
  features?: FeatureRow[];
  caption?: string;
  eyebrow?: string;
  compact?: boolean;
  wide?: boolean;
  showHead?: boolean;
};

const classes = `cmatrix${compact ? " cmatrix--compact" : ""}${wide ? " cmatrix--wide" : ""}`;
const sr = (txt: string) => `<span class="sr-only">${txt}</span>`;
---

<section class={classes} aria-label="Plan comparison" data-section="comparison-matrix">
  <div class="container">
    {showHead && (
      <header class="cmatrix__head">
        <p class="cmatrix__eyebrow">{eyebrow}</p>
        <h2 class="h2 cmatrix__title">{caption}</h2>
      </header>
    )}

    <!-- Framed, scrollable region on small screens -->
    <div class="cmatrix__wrap" role="region" aria-label="Scrollable comparison table" tabindex="0">
      <table class="cmatrix__table">
        <caption class="sr-only">{caption}</caption>

        <!-- Column model: lock first column; remaining plan columns divide evenly -->
        <colgroup>
          <col class="cmatrix__col--feat" />
          {plans.map(() => <col class="cmatrix__col--plan" />)}
        </colgroup>

        <thead>
          <tr>
            <th scope="col" class="cmatrix__featcol">Feature</th>
            {plans.map((p) => (
              <th scope="col" class="cmatrix__plancol">{p}</th>
            ))}
          </tr>
        </thead>

        <tbody>
          {features.map((row) => (
            <tr>
              <th scope="row" class="cmatrix__feat">{row.label}</th>
              {row.values.map((v, i) => (
                <td class="cmatrix__cell" data-plan={plans[i] ?? `plan-${i + 1}`}>
                  {
                    typeof v === "boolean"
                      ? (
                        v
                          ? (
                            <span class="cmatrix__check" aria-label={`Included in ${plans[i]}`}>
                              <svg viewBox="0 0 20 20" aria-hidden="true">
                                <path d="M7.5 13.2 4.8 10.6l-1.3 1.3 4 4 9-9-1.3-1.3-7.7 7.7z" />
                              </svg>
                            </span>
                          )
                          : (
                            <span class="cmatrix__cross" aria-label={`Not included in ${plans[i]}`}>
                              <svg viewBox="0 0 20 20" aria-hidden="true">
                                <path d="M5.6 4.9 4.9 5.6l4.4 4.4-4.4 4.4.7.7 4.4-4.4 4.4 4.4.7-.7-4.4-4.4 4.4-4.4-.7-.7-4.4 4.4-4.4-4.4z" />
                              </svg>
                            </span>
                          )
                      )
                      : <span class="cmatrix__text">{String(v)}</span>
                  }
                </td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  </div>
</section>

<style is:global>
  @import "../../../styles/tokens.css";
  @import "../../../styles/typography.css";
  @import "../../../styles/utilities.css";
  @import "../../../styles/breakpoints.css";
</style>
