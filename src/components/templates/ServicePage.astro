---
// File: src/components/templates/ServicePage.astro
// Adjust this import to your actual path from grep
import BaseLayout from "@/components/layout/BaseLayout.astro";

const {
  title,
  description = "",
  hero = {},
  features = [],
  aside = {
    eyebrow: "Pricing",
    title: "Compare packages",
    body: "Transparent pricing for every career stage.",
    actions: [{ href: "/pricing/", label: "View Packages" }, { href: "/contact/", label: "Talk to us" }],
  }
} = Astro.props as {
  title: string;
  description?: string;
  hero?: { eyebrow?: string; image?: string; alt?: string; actions?: { label: string; href: string }[] };
  features?: { title: string; body: string }[];
  aside?: { eyebrow?: string; title: string; body: string; actions?: { href: string; label: string }[] };
};
---

<BaseLayout {title} {description}>
  <section class="section" aria-labelledby="service-hero">
    <div class="container flow">
      {hero?.eyebrow && <p class="eyebrow">{hero.eyebrow}</p>}
      <h1 class="title">{title}</h1>
      {description && <p class="sub">{description}</p>}
      {Array.isArray(hero?.actions) && hero.actions.length > 0 && (
        <div class="cta-row">
          {hero.actions.map(a => <a class="btn" href={a.href}>{a.label}</a>)}
        </div>
      )}
    </div>
  </section>

  <section class="section section--balanced">
    <div class="container grid">
      <article class="content">
        <slot />
      </article>
      <aside class="aside" aria-label="Quick actions">
        <div class="card">
          <p class="eyebrow">{aside.eyebrow}</p>
          <h2 class="card-title">{aside.title}</h2>
          <p class="card-sub">{aside.body}</p>
          <div class="cta-col">
            <a class="btn" href={aside.actions?.[0]?.href ?? "/pricing/"}>{aside.actions?.[0]?.label ?? "View Packages"}</a>
            <a class="btn btn--secondary" href={aside.actions?.[1]?.href ?? "/contact/"}>{aside.actions?.[1]?.label ?? "Talk to us"}</a>
          </div>
        </div>
      </aside>
    </div>
  </section>

  {Array.isArray(features) && features.length > 0 && (
    <section class="section section--tight" aria-labelledby="service-features">
      <div class="container features">
        {features.map(f => (
          <div class="feature">
            <h3>{f.title}</h3>
            <p>{f.body}</p>
          </div>
        ))}
      </div>
    </section>
  )}

  <style>
    .section { padding-block: clamp(1rem, 3vw, 2rem); }
    .section--tight { padding-block: clamp(.75rem, 2vw, 1.25rem); }
    .container { max-width: 1120px; margin-inline: auto; padding-inline: 1rem; }
    .flow > * { margin-block: .5rem; }
    .eyebrow { font-size: .875rem; text-transform: uppercase; letter-spacing: .06em; opacity: .7; }
    .title { font-size: clamp(1.75rem, 3.5vw, 2.5rem); line-height: 1.2; }
    .sub { max-width: 70ch; }
    .cta-row { display: flex; gap: .75rem; flex-wrap: wrap; margin-top: .5rem; }
    .btn { display:inline-block; padding:.6rem .95rem; border-radius:.5rem; border:1px solid currentColor; text-decoration:none }
    .btn--secondary { opacity:.85 }
    .grid { display:grid; gap: 1.5rem; }
    @media (min-width: 1024px){ .grid { grid-template-columns: minmax(0,1fr) 320px; } }
    .content :where(h2,h3){ margin-top: 1rem; margin-bottom: .25rem; }
    .content :where(p,ul,ol){ margin-block: .5rem; }
    .aside .card { position: sticky; top: 4rem; padding: 1rem; border: 1px solid #e5e7eb; border-radius: .75rem; }
    .card-title { font-size: 1.1rem; margin: .25rem 0; }
    .card-sub { opacity: .85; margin-bottom: .75rem; }
    .cta-col { display: grid; gap: .5rem; }
    .features { display:grid; gap: 1rem; grid-template-columns: repeat(auto-fit, minmax(220px,1fr)); }
    .feature { padding: 1rem; border:1px solid #e5e7eb; border-radius:.75rem; }
  </style>
</BaseLayout>
